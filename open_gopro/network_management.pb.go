// network_management.proto/Open GoPro, Version 2.0 (C) Copyright 2021 GoPro, Inc. (http://gopro.com/OpenGoPro).

// This copyright was auto-generated on Wed Jul  5 19:32:05 UTC 2023

//
//Defines the structure of protobuf messages for network management

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: network_management.proto

package open_gopro

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumNetworkOwner int32

const (
	EnumNetworkOwner_DEPRECATED_1 EnumNetworkOwner = 0
	EnumNetworkOwner_DEPRECATED_2 EnumNetworkOwner = 1
	EnumNetworkOwner_DEPRECATED_3 EnumNetworkOwner = 2
	EnumNetworkOwner_DEPRECATED_4 EnumNetworkOwner = 3
	EnumNetworkOwner_DEPRECATED_5 EnumNetworkOwner = 4
	EnumNetworkOwner_DEPRECATED_6 EnumNetworkOwner = 8
	EnumNetworkOwner_DEPRECATED_7 EnumNetworkOwner = 16
)

// Enum value maps for EnumNetworkOwner.
var (
	EnumNetworkOwner_name = map[int32]string{
		0:  "DEPRECATED_1",
		1:  "DEPRECATED_2",
		2:  "DEPRECATED_3",
		3:  "DEPRECATED_4",
		4:  "DEPRECATED_5",
		8:  "DEPRECATED_6",
		16: "DEPRECATED_7",
	}
	EnumNetworkOwner_value = map[string]int32{
		"DEPRECATED_1": 0,
		"DEPRECATED_2": 1,
		"DEPRECATED_3": 2,
		"DEPRECATED_4": 3,
		"DEPRECATED_5": 4,
		"DEPRECATED_6": 8,
		"DEPRECATED_7": 16,
	}
)

func (x EnumNetworkOwner) Enum() *EnumNetworkOwner {
	p := new(EnumNetworkOwner)
	*p = x
	return p
}

func (x EnumNetworkOwner) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumNetworkOwner) Descriptor() protoreflect.EnumDescriptor {
	return file_network_management_proto_enumTypes[0].Descriptor()
}

func (EnumNetworkOwner) Type() protoreflect.EnumType {
	return &file_network_management_proto_enumTypes[0]
}

func (x EnumNetworkOwner) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EnumNetworkOwner) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EnumNetworkOwner(num)
	return nil
}

// Deprecated: Use EnumNetworkOwner.Descriptor instead.
func (EnumNetworkOwner) EnumDescriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{0}
}

type EnumProvisioning int32

const (
	EnumProvisioning_PROVISIONING_UNKNOWN                   EnumProvisioning = 0
	EnumProvisioning_PROVISIONING_NEVER_STARTED             EnumProvisioning = 1
	EnumProvisioning_PROVISIONING_STARTED                   EnumProvisioning = 2
	EnumProvisioning_PROVISIONING_ABORTED_BY_SYSTEM         EnumProvisioning = 3
	EnumProvisioning_PROVISIONING_CANCELLED_BY_USER         EnumProvisioning = 4
	EnumProvisioning_PROVISIONING_SUCCESS_NEW_AP            EnumProvisioning = 5
	EnumProvisioning_PROVISIONING_SUCCESS_OLD_AP            EnumProvisioning = 6
	EnumProvisioning_PROVISIONING_ERROR_FAILED_TO_ASSOCIATE EnumProvisioning = 7
	EnumProvisioning_PROVISIONING_ERROR_PASSWORD_AUTH       EnumProvisioning = 8
	EnumProvisioning_PROVISIONING_ERROR_EULA_BLOCKING       EnumProvisioning = 9
	EnumProvisioning_PROVISIONING_ERROR_NO_INTERNET         EnumProvisioning = 10
	EnumProvisioning_PROVISIONING_ERROR_UNSUPPORTED_TYPE    EnumProvisioning = 11
)

// Enum value maps for EnumProvisioning.
var (
	EnumProvisioning_name = map[int32]string{
		0:  "PROVISIONING_UNKNOWN",
		1:  "PROVISIONING_NEVER_STARTED",
		2:  "PROVISIONING_STARTED",
		3:  "PROVISIONING_ABORTED_BY_SYSTEM",
		4:  "PROVISIONING_CANCELLED_BY_USER",
		5:  "PROVISIONING_SUCCESS_NEW_AP",
		6:  "PROVISIONING_SUCCESS_OLD_AP",
		7:  "PROVISIONING_ERROR_FAILED_TO_ASSOCIATE",
		8:  "PROVISIONING_ERROR_PASSWORD_AUTH",
		9:  "PROVISIONING_ERROR_EULA_BLOCKING",
		10: "PROVISIONING_ERROR_NO_INTERNET",
		11: "PROVISIONING_ERROR_UNSUPPORTED_TYPE",
	}
	EnumProvisioning_value = map[string]int32{
		"PROVISIONING_UNKNOWN":                   0,
		"PROVISIONING_NEVER_STARTED":             1,
		"PROVISIONING_STARTED":                   2,
		"PROVISIONING_ABORTED_BY_SYSTEM":         3,
		"PROVISIONING_CANCELLED_BY_USER":         4,
		"PROVISIONING_SUCCESS_NEW_AP":            5,
		"PROVISIONING_SUCCESS_OLD_AP":            6,
		"PROVISIONING_ERROR_FAILED_TO_ASSOCIATE": 7,
		"PROVISIONING_ERROR_PASSWORD_AUTH":       8,
		"PROVISIONING_ERROR_EULA_BLOCKING":       9,
		"PROVISIONING_ERROR_NO_INTERNET":         10,
		"PROVISIONING_ERROR_UNSUPPORTED_TYPE":    11,
	}
)

func (x EnumProvisioning) Enum() *EnumProvisioning {
	p := new(EnumProvisioning)
	*p = x
	return p
}

func (x EnumProvisioning) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumProvisioning) Descriptor() protoreflect.EnumDescriptor {
	return file_network_management_proto_enumTypes[1].Descriptor()
}

func (EnumProvisioning) Type() protoreflect.EnumType {
	return &file_network_management_proto_enumTypes[1]
}

func (x EnumProvisioning) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EnumProvisioning) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EnumProvisioning(num)
	return nil
}

// Deprecated: Use EnumProvisioning.Descriptor instead.
func (EnumProvisioning) EnumDescriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{1}
}

type EnumScanning int32

const (
	EnumScanning_SCANNING_UNKNOWN           EnumScanning = 0
	EnumScanning_SCANNING_NEVER_STARTED     EnumScanning = 1
	EnumScanning_SCANNING_STARTED           EnumScanning = 2
	EnumScanning_SCANNING_ABORTED_BY_SYSTEM EnumScanning = 3
	EnumScanning_SCANNING_CANCELLED_BY_USER EnumScanning = 4
	EnumScanning_SCANNING_SUCCESS           EnumScanning = 5
)

// Enum value maps for EnumScanning.
var (
	EnumScanning_name = map[int32]string{
		0: "SCANNING_UNKNOWN",
		1: "SCANNING_NEVER_STARTED",
		2: "SCANNING_STARTED",
		3: "SCANNING_ABORTED_BY_SYSTEM",
		4: "SCANNING_CANCELLED_BY_USER",
		5: "SCANNING_SUCCESS",
	}
	EnumScanning_value = map[string]int32{
		"SCANNING_UNKNOWN":           0,
		"SCANNING_NEVER_STARTED":     1,
		"SCANNING_STARTED":           2,
		"SCANNING_ABORTED_BY_SYSTEM": 3,
		"SCANNING_CANCELLED_BY_USER": 4,
		"SCANNING_SUCCESS":           5,
	}
)

func (x EnumScanning) Enum() *EnumScanning {
	p := new(EnumScanning)
	*p = x
	return p
}

func (x EnumScanning) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumScanning) Descriptor() protoreflect.EnumDescriptor {
	return file_network_management_proto_enumTypes[2].Descriptor()
}

func (EnumScanning) Type() protoreflect.EnumType {
	return &file_network_management_proto_enumTypes[2]
}

func (x EnumScanning) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EnumScanning) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EnumScanning(num)
	return nil
}

// Deprecated: Use EnumScanning.Descriptor instead.
func (EnumScanning) EnumDescriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{2}
}

type EnumScanEntryFlags int32

const (
	EnumScanEntryFlags_SCAN_FLAG_OPEN             EnumScanEntryFlags = 0 // This network does not require authentication
	EnumScanEntryFlags_SCAN_FLAG_AUTHENTICATED    EnumScanEntryFlags = 1 // This network requires authentication
	EnumScanEntryFlags_SCAN_FLAG_CONFIGURED       EnumScanEntryFlags = 2 // This network has been previously provisioned
	EnumScanEntryFlags_SCAN_FLAG_BEST_SSID        EnumScanEntryFlags = 4
	EnumScanEntryFlags_SCAN_FLAG_ASSOCIATED       EnumScanEntryFlags = 8 // camera is connected to this AP
	EnumScanEntryFlags_SCAN_FLAG_UNSUPPORTED_TYPE EnumScanEntryFlags = 16
	EnumScanEntryFlags_DEPRECATED                 EnumScanEntryFlags = 32
)

// Enum value maps for EnumScanEntryFlags.
var (
	EnumScanEntryFlags_name = map[int32]string{
		0:  "SCAN_FLAG_OPEN",
		1:  "SCAN_FLAG_AUTHENTICATED",
		2:  "SCAN_FLAG_CONFIGURED",
		4:  "SCAN_FLAG_BEST_SSID",
		8:  "SCAN_FLAG_ASSOCIATED",
		16: "SCAN_FLAG_UNSUPPORTED_TYPE",
		32: "DEPRECATED",
	}
	EnumScanEntryFlags_value = map[string]int32{
		"SCAN_FLAG_OPEN":             0,
		"SCAN_FLAG_AUTHENTICATED":    1,
		"SCAN_FLAG_CONFIGURED":       2,
		"SCAN_FLAG_BEST_SSID":        4,
		"SCAN_FLAG_ASSOCIATED":       8,
		"SCAN_FLAG_UNSUPPORTED_TYPE": 16,
		"DEPRECATED":                 32,
	}
)

func (x EnumScanEntryFlags) Enum() *EnumScanEntryFlags {
	p := new(EnumScanEntryFlags)
	*p = x
	return p
}

func (x EnumScanEntryFlags) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumScanEntryFlags) Descriptor() protoreflect.EnumDescriptor {
	return file_network_management_proto_enumTypes[3].Descriptor()
}

func (EnumScanEntryFlags) Type() protoreflect.EnumType {
	return &file_network_management_proto_enumTypes[3]
}

func (x EnumScanEntryFlags) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EnumScanEntryFlags) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EnumScanEntryFlags(num)
	return nil
}

// Deprecated: Use EnumScanEntryFlags.Descriptor instead.
func (EnumScanEntryFlags) EnumDescriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{3}
}

type NotifProvisioningState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvisioningState *EnumProvisioning `protobuf:"varint,1,req,name=provisioning_state,json=provisioningState,enum=open_gopro.EnumProvisioning" json:"provisioning_state,omitempty"` // Provisioning/connection state
}

func (x *NotifProvisioningState) Reset() {
	*x = NotifProvisioningState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifProvisioningState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifProvisioningState) ProtoMessage() {}

func (x *NotifProvisioningState) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifProvisioningState.ProtoReflect.Descriptor instead.
func (*NotifProvisioningState) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{0}
}

func (x *NotifProvisioningState) GetProvisioningState() EnumProvisioning {
	if x != nil && x.ProvisioningState != nil {
		return *x.ProvisioningState
	}
	return EnumProvisioning_PROVISIONING_UNKNOWN
}

type NotifStartScanning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScanningState       *EnumScanning `protobuf:"varint,1,req,name=scanning_state,json=scanningState,enum=open_gopro.EnumScanning" json:"scanning_state,omitempty"` // Scanning state
	ScanId              *int32        `protobuf:"varint,2,opt,name=scan_id,json=scanId" json:"scan_id,omitempty"`                                                   // ID associated with scan results (included if scan was successful)
	TotalEntries        *int32        `protobuf:"varint,3,opt,name=total_entries,json=totalEntries" json:"total_entries,omitempty"`                                 // Number of APs found during scan (included if scan was successful)
	TotalConfiguredSsid *int32        `protobuf:"varint,4,req,name=total_configured_ssid,json=totalConfiguredSsid" json:"total_configured_ssid,omitempty"`          // Total count of camera's provisioned SSIDs
}

func (x *NotifStartScanning) Reset() {
	*x = NotifStartScanning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifStartScanning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifStartScanning) ProtoMessage() {}

func (x *NotifStartScanning) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifStartScanning.ProtoReflect.Descriptor instead.
func (*NotifStartScanning) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{1}
}

func (x *NotifStartScanning) GetScanningState() EnumScanning {
	if x != nil && x.ScanningState != nil {
		return *x.ScanningState
	}
	return EnumScanning_SCANNING_UNKNOWN
}

func (x *NotifStartScanning) GetScanId() int32 {
	if x != nil && x.ScanId != nil {
		return *x.ScanId
	}
	return 0
}

func (x *NotifStartScanning) GetTotalEntries() int32 {
	if x != nil && x.TotalEntries != nil {
		return *x.TotalEntries
	}
	return 0
}

func (x *NotifStartScanning) GetTotalConfiguredSsid() int32 {
	if x != nil && x.TotalConfiguredSsid != nil {
		return *x.TotalConfiguredSsid
	}
	return 0
}

type RequestConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid         *string           `protobuf:"bytes,1,req,name=ssid" json:"ssid,omitempty"`                                                                       // AP SSID
	OwnerPurpose *EnumNetworkOwner `protobuf:"varint,2,opt,name=owner_purpose,json=ownerPurpose,enum=open_gopro.EnumNetworkOwner" json:"owner_purpose,omitempty"` // Deprecated
}

func (x *RequestConnect) Reset() {
	*x = RequestConnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConnect) ProtoMessage() {}

func (x *RequestConnect) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConnect.ProtoReflect.Descriptor instead.
func (*RequestConnect) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{2}
}

func (x *RequestConnect) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *RequestConnect) GetOwnerPurpose() EnumNetworkOwner {
	if x != nil && x.OwnerPurpose != nil {
		return *x.OwnerPurpose
	}
	return EnumNetworkOwner_DEPRECATED_1
}

type RequestConnectNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid                  *string           `protobuf:"bytes,1,req,name=ssid" json:"ssid,omitempty"`                                                                       // AP SSID
	Password              *string           `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`                                                               // AP password
	StaticIp              []byte            `protobuf:"bytes,3,opt,name=static_ip,json=staticIp" json:"static_ip,omitempty"`                                               // Static IP address
	Gateway               []byte            `protobuf:"bytes,4,opt,name=gateway" json:"gateway,omitempty"`                                                                 // Gateway IP address
	Subnet                []byte            `protobuf:"bytes,5,opt,name=subnet" json:"subnet,omitempty"`                                                                   // Subnet mask
	DnsPrimary            []byte            `protobuf:"bytes,6,opt,name=dns_primary,json=dnsPrimary" json:"dns_primary,omitempty"`                                         // Primary DNS
	DnsSecondary          []byte            `protobuf:"bytes,7,opt,name=dns_secondary,json=dnsSecondary" json:"dns_secondary,omitempty"`                                   // Secondary DNS
	SetToLeastPreferredAp *bool             `protobuf:"varint,8,opt,name=set_to_least_preferred_ap,json=setToLeastPreferredAp" json:"set_to_least_preferred_ap,omitempty"` // Deprecated
	OwnerPurpose          *EnumNetworkOwner `protobuf:"varint,9,opt,name=owner_purpose,json=ownerPurpose,enum=open_gopro.EnumNetworkOwner" json:"owner_purpose,omitempty"` // Deprecated
}

func (x *RequestConnectNew) Reset() {
	*x = RequestConnectNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestConnectNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestConnectNew) ProtoMessage() {}

func (x *RequestConnectNew) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestConnectNew.ProtoReflect.Descriptor instead.
func (*RequestConnectNew) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{3}
}

func (x *RequestConnectNew) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *RequestConnectNew) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *RequestConnectNew) GetStaticIp() []byte {
	if x != nil {
		return x.StaticIp
	}
	return nil
}

func (x *RequestConnectNew) GetGateway() []byte {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *RequestConnectNew) GetSubnet() []byte {
	if x != nil {
		return x.Subnet
	}
	return nil
}

func (x *RequestConnectNew) GetDnsPrimary() []byte {
	if x != nil {
		return x.DnsPrimary
	}
	return nil
}

func (x *RequestConnectNew) GetDnsSecondary() []byte {
	if x != nil {
		return x.DnsSecondary
	}
	return nil
}

func (x *RequestConnectNew) GetSetToLeastPreferredAp() bool {
	if x != nil && x.SetToLeastPreferredAp != nil {
		return *x.SetToLeastPreferredAp
	}
	return false
}

func (x *RequestConnectNew) GetOwnerPurpose() EnumNetworkOwner {
	if x != nil && x.OwnerPurpose != nil {
		return *x.OwnerPurpose
	}
	return EnumNetworkOwner_DEPRECATED_1
}

type RequestGetApEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartIndex *int32 `protobuf:"varint,1,req,name=start_index,json=startIndex" json:"start_index,omitempty"` // Used for paging. 0 <= start_index < NotifStartScanning.total_entries
	MaxEntries *int32 `protobuf:"varint,2,req,name=max_entries,json=maxEntries" json:"max_entries,omitempty"` // Used for paging. Value must be < NotifStartScanning.total_entries
	ScanId     *int32 `protobuf:"varint,3,req,name=scan_id,json=scanId" json:"scan_id,omitempty"`             // ID corresponding to a set of scan results (i.e. NotifStartScanning.scan_id)
}

func (x *RequestGetApEntries) Reset() {
	*x = RequestGetApEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetApEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetApEntries) ProtoMessage() {}

func (x *RequestGetApEntries) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetApEntries.ProtoReflect.Descriptor instead.
func (*RequestGetApEntries) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{4}
}

func (x *RequestGetApEntries) GetStartIndex() int32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

func (x *RequestGetApEntries) GetMaxEntries() int32 {
	if x != nil && x.MaxEntries != nil {
		return *x.MaxEntries
	}
	return 0
}

func (x *RequestGetApEntries) GetScanId() int32 {
	if x != nil && x.ScanId != nil {
		return *x.ScanId
	}
	return 0
}

type RequestReleaseNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestReleaseNetwork) Reset() {
	*x = RequestReleaseNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestReleaseNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestReleaseNetwork) ProtoMessage() {}

func (x *RequestReleaseNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestReleaseNetwork.ProtoReflect.Descriptor instead.
func (*RequestReleaseNetwork) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{5}
}

type RequestStartScan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestStartScan) Reset() {
	*x = RequestStartScan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStartScan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStartScan) ProtoMessage() {}

func (x *RequestStartScan) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStartScan.ProtoReflect.Descriptor instead.
func (*RequestStartScan) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{6}
}

type ResponseConnect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            *EnumResultGeneric `protobuf:"varint,1,req,name=result,enum=open_gopro.EnumResultGeneric" json:"result,omitempty"`                                               // Generic pass/fail/error info
	ProvisioningState *EnumProvisioning  `protobuf:"varint,2,req,name=provisioning_state,json=provisioningState,enum=open_gopro.EnumProvisioning" json:"provisioning_state,omitempty"` // Provisioning/connection state
	TimeoutSeconds    *int32             `protobuf:"varint,3,req,name=timeout_seconds,json=timeoutSeconds" json:"timeout_seconds,omitempty"`                                           // Network connection timeout (seconds)
}

func (x *ResponseConnect) Reset() {
	*x = ResponseConnect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseConnect) ProtoMessage() {}

func (x *ResponseConnect) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseConnect.ProtoReflect.Descriptor instead.
func (*ResponseConnect) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseConnect) GetResult() EnumResultGeneric {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return EnumResultGeneric_RESULT_UNKNOWN
}

func (x *ResponseConnect) GetProvisioningState() EnumProvisioning {
	if x != nil && x.ProvisioningState != nil {
		return *x.ProvisioningState
	}
	return EnumProvisioning_PROVISIONING_UNKNOWN
}

func (x *ResponseConnect) GetTimeoutSeconds() int32 {
	if x != nil && x.TimeoutSeconds != nil {
		return *x.TimeoutSeconds
	}
	return 0
}

type ResponseConnectNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result            *EnumResultGeneric `protobuf:"varint,1,req,name=result,enum=open_gopro.EnumResultGeneric" json:"result,omitempty"`                                               // Status of Connect New request
	ProvisioningState *EnumProvisioning  `protobuf:"varint,2,req,name=provisioning_state,json=provisioningState,enum=open_gopro.EnumProvisioning" json:"provisioning_state,omitempty"` // Current provisioning state of the network
	TimeoutSeconds    *int32             `protobuf:"varint,3,req,name=timeout_seconds,json=timeoutSeconds" json:"timeout_seconds,omitempty"`
}

func (x *ResponseConnectNew) Reset() {
	*x = ResponseConnectNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseConnectNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseConnectNew) ProtoMessage() {}

func (x *ResponseConnectNew) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseConnectNew.ProtoReflect.Descriptor instead.
func (*ResponseConnectNew) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseConnectNew) GetResult() EnumResultGeneric {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return EnumResultGeneric_RESULT_UNKNOWN
}

func (x *ResponseConnectNew) GetProvisioningState() EnumProvisioning {
	if x != nil && x.ProvisioningState != nil {
		return *x.ProvisioningState
	}
	return EnumProvisioning_PROVISIONING_UNKNOWN
}

func (x *ResponseConnectNew) GetTimeoutSeconds() int32 {
	if x != nil && x.TimeoutSeconds != nil {
		return *x.TimeoutSeconds
	}
	return 0
}

type ScanEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid               *string           `protobuf:"bytes,1,req,name=ssid" json:"ssid,omitempty"`                                                                       // AP SSID
	SignalStrengthBars *int32            `protobuf:"varint,2,req,name=signal_strength_bars,json=signalStrengthBars" json:"signal_strength_bars,omitempty"`              // Signal strength (3 bars: >-70 dBm; 2 bars: >-85 dBm; 1 bar: <=-85
	SignalFrequencyMhz *int32            `protobuf:"varint,4,req,name=signal_frequency_mhz,json=signalFrequencyMhz" json:"signal_frequency_mhz,omitempty"`              // Signal frequency (MHz)
	ScanEntryFlags     *int32            `protobuf:"varint,5,req,name=scan_entry_flags,json=scanEntryFlags" json:"scan_entry_flags,omitempty"`                          // Bitmasked value from EnumScanEntryFlags
	OwnerPurpose       *EnumNetworkOwner `protobuf:"varint,6,opt,name=owner_purpose,json=ownerPurpose,enum=open_gopro.EnumNetworkOwner" json:"owner_purpose,omitempty"` // Deprecated
}

func (x *ScanEntry) Reset() {
	*x = ScanEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanEntry) ProtoMessage() {}

func (x *ScanEntry) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanEntry.ProtoReflect.Descriptor instead.
func (*ScanEntry) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{9}
}

func (x *ScanEntry) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *ScanEntry) GetSignalStrengthBars() int32 {
	if x != nil && x.SignalStrengthBars != nil {
		return *x.SignalStrengthBars
	}
	return 0
}

func (x *ScanEntry) GetSignalFrequencyMhz() int32 {
	if x != nil && x.SignalFrequencyMhz != nil {
		return *x.SignalFrequencyMhz
	}
	return 0
}

func (x *ScanEntry) GetScanEntryFlags() int32 {
	if x != nil && x.ScanEntryFlags != nil {
		return *x.ScanEntryFlags
	}
	return 0
}

func (x *ScanEntry) GetOwnerPurpose() EnumNetworkOwner {
	if x != nil && x.OwnerPurpose != nil {
		return *x.OwnerPurpose
	}
	return EnumNetworkOwner_DEPRECATED_1
}

type ResponseGetApEntries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  *EnumResultGeneric `protobuf:"varint,1,req,name=result,enum=open_gopro.EnumResultGeneric" json:"result,omitempty"` // Generic pass/fail/error info
	ScanId  *int32             `protobuf:"varint,2,req,name=scan_id,json=scanId" json:"scan_id,omitempty"`                     // ID associated with this batch of results
	Entries []*ScanEntry       `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`                                  // Array containing details about discovered APs
}

func (x *ResponseGetApEntries) Reset() {
	*x = ResponseGetApEntries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetApEntries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetApEntries) ProtoMessage() {}

func (x *ResponseGetApEntries) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetApEntries.ProtoReflect.Descriptor instead.
func (*ResponseGetApEntries) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseGetApEntries) GetResult() EnumResultGeneric {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return EnumResultGeneric_RESULT_UNKNOWN
}

func (x *ResponseGetApEntries) GetScanId() int32 {
	if x != nil && x.ScanId != nil {
		return *x.ScanId
	}
	return 0
}

func (x *ResponseGetApEntries) GetEntries() []*ScanEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ResponseStartScanning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result        *EnumResultGeneric `protobuf:"varint,1,req,name=result,enum=open_gopro.EnumResultGeneric" json:"result,omitempty"`                               // Generic pass/fail/error info
	ScanningState *EnumScanning      `protobuf:"varint,2,req,name=scanning_state,json=scanningState,enum=open_gopro.EnumScanning" json:"scanning_state,omitempty"` // Scanning state
}

func (x *ResponseStartScanning) Reset() {
	*x = ResponseStartScanning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStartScanning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStartScanning) ProtoMessage() {}

func (x *ResponseStartScanning) ProtoReflect() protoreflect.Message {
	mi := &file_network_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStartScanning.ProtoReflect.Descriptor instead.
func (*ResponseStartScanning) Descriptor() ([]byte, []int) {
	return file_network_management_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseStartScanning) GetResult() EnumResultGeneric {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return EnumResultGeneric_RESULT_UNKNOWN
}

func (x *ResponseStartScanning) GetScanningState() EnumScanning {
	if x != nil && x.ScanningState != nil {
		return *x.ScanningState
	}
	return EnumScanning_SCANNING_UNKNOWN
}

var File_network_management_proto protoreflect.FileDescriptor

var file_network_management_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x1a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65,
	0x0a, 0x16, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3f, 0x0a, 0x0e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0d,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x63, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x5f,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x53, 0x73, 0x69, 0x64, 0x22,
	0x67, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70,
	0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0xd5, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x64, 0x6e, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x19, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x65,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x73, 0x65, 0x74, 0x54, 0x6f, 0x4c, 0x65, 0x61,
	0x73, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x41, 0x70, 0x12, 0x41, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x22, 0x70, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x63, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x12, 0x0a, 0x10, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x22,
	0xbe, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x69, 0x63, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b, 0x0a, 0x12, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x22, 0xc1, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x77, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b,
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x09, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x62, 0x61, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x42, 0x61, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x6d, 0x68, 0x7a,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x46, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x4d, 0x68, 0x7a, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x41, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x73, 0x63, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x53,
	0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x63, 0x61, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x52, 0x0d, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x2a, 0x90, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x52,
	0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x31, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45,
	0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x32, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x33, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x34, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x35,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x5f, 0x36, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54,
	0x45, 0x44, 0x5f, 0x37, 0x10, 0x10, 0x2a, 0xb5, 0x03, 0x0a, 0x10, 0x45, 0x6e, 0x75, 0x6d, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f,
	0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f,
	0x4e, 0x45, 0x57, 0x5f, 0x41, 0x50, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x5f, 0x4f, 0x4c, 0x44, 0x5f, 0x41, 0x50, 0x10, 0x06, 0x12, 0x2a, 0x0a, 0x26, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49,
	0x41, 0x54, 0x45, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53,
	0x57, 0x4f, 0x52, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x45, 0x55, 0x4c, 0x41, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x09, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x45, 0x54, 0x10, 0x0a, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x55,
	0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0b, 0x2a, 0xac,
	0x01, 0x0a, 0x0c, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x43, 0x41, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x43, 0x41, 0x4e, 0x4e,
	0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x2a, 0xc2, 0x01,
	0x0a, 0x12, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x63, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x46, 0x4c, 0x41,
	0x47, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x43, 0x41, 0x4e,
	0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x46, 0x4c,
	0x41, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x55, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x42, 0x45, 0x53,
	0x54, 0x5f, 0x53, 0x53, 0x49, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x41, 0x4e,
	0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x41, 0x53, 0x53, 0x4f, 0x43, 0x49, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x43, 0x41, 0x4e, 0x5f, 0x46, 0x4c, 0x41, 0x47, 0x5f,
	0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x50, 0x52, 0x45, 0x43, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x20, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x75, 0x61, 0x70, 0x61, 0x70, 0x61, 0x2f, 0x67, 0x6f, 0x5f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x6f, 0x70, 0x72, 0x6f,
}

var (
	file_network_management_proto_rawDescOnce sync.Once
	file_network_management_proto_rawDescData = file_network_management_proto_rawDesc
)

func file_network_management_proto_rawDescGZIP() []byte {
	file_network_management_proto_rawDescOnce.Do(func() {
		file_network_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_management_proto_rawDescData)
	})
	return file_network_management_proto_rawDescData
}

var file_network_management_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_network_management_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_network_management_proto_goTypes = []interface{}{
	(EnumNetworkOwner)(0),          // 0: open_gopro.EnumNetworkOwner
	(EnumProvisioning)(0),          // 1: open_gopro.EnumProvisioning
	(EnumScanning)(0),              // 2: open_gopro.EnumScanning
	(EnumScanEntryFlags)(0),        // 3: open_gopro.EnumScanEntryFlags
	(*NotifProvisioningState)(nil), // 4: open_gopro.NotifProvisioningState
	(*NotifStartScanning)(nil),     // 5: open_gopro.NotifStartScanning
	(*RequestConnect)(nil),         // 6: open_gopro.RequestConnect
	(*RequestConnectNew)(nil),      // 7: open_gopro.RequestConnectNew
	(*RequestGetApEntries)(nil),    // 8: open_gopro.RequestGetApEntries
	(*RequestReleaseNetwork)(nil),  // 9: open_gopro.RequestReleaseNetwork
	(*RequestStartScan)(nil),       // 10: open_gopro.RequestStartScan
	(*ResponseConnect)(nil),        // 11: open_gopro.ResponseConnect
	(*ResponseConnectNew)(nil),     // 12: open_gopro.ResponseConnectNew
	(*ScanEntry)(nil),              // 13: open_gopro.ScanEntry
	(*ResponseGetApEntries)(nil),   // 14: open_gopro.ResponseGetApEntries
	(*ResponseStartScanning)(nil),  // 15: open_gopro.ResponseStartScanning
	(EnumResultGeneric)(0),         // 16: open_gopro.EnumResultGeneric
}
var file_network_management_proto_depIdxs = []int32{
	1,  // 0: open_gopro.NotifProvisioningState.provisioning_state:type_name -> open_gopro.EnumProvisioning
	2,  // 1: open_gopro.NotifStartScanning.scanning_state:type_name -> open_gopro.EnumScanning
	0,  // 2: open_gopro.RequestConnect.owner_purpose:type_name -> open_gopro.EnumNetworkOwner
	0,  // 3: open_gopro.RequestConnectNew.owner_purpose:type_name -> open_gopro.EnumNetworkOwner
	16, // 4: open_gopro.ResponseConnect.result:type_name -> open_gopro.EnumResultGeneric
	1,  // 5: open_gopro.ResponseConnect.provisioning_state:type_name -> open_gopro.EnumProvisioning
	16, // 6: open_gopro.ResponseConnectNew.result:type_name -> open_gopro.EnumResultGeneric
	1,  // 7: open_gopro.ResponseConnectNew.provisioning_state:type_name -> open_gopro.EnumProvisioning
	0,  // 8: open_gopro.ScanEntry.owner_purpose:type_name -> open_gopro.EnumNetworkOwner
	16, // 9: open_gopro.ResponseGetApEntries.result:type_name -> open_gopro.EnumResultGeneric
	13, // 10: open_gopro.ResponseGetApEntries.entries:type_name -> open_gopro.ScanEntry
	16, // 11: open_gopro.ResponseStartScanning.result:type_name -> open_gopro.EnumResultGeneric
	2,  // 12: open_gopro.ResponseStartScanning.scanning_state:type_name -> open_gopro.EnumScanning
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_network_management_proto_init() }
func file_network_management_proto_init() {
	if File_network_management_proto != nil {
		return
	}
	file_response_generic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_network_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifProvisioningState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifStartScanning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestConnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestConnectNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetApEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestReleaseNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStartScan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseConnect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseConnectNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetApEntries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStartScanning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_management_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_management_proto_goTypes,
		DependencyIndexes: file_network_management_proto_depIdxs,
		EnumInfos:         file_network_management_proto_enumTypes,
		MessageInfos:      file_network_management_proto_msgTypes,
	}.Build()
	File_network_management_proto = out.File
	file_network_management_proto_rawDesc = nil
	file_network_management_proto_goTypes = nil
	file_network_management_proto_depIdxs = nil
}
